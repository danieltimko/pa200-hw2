name: CI/CD for Recipes App

on: [push]

jobs:
  check-changes:
    # Checks if application code changed (in recipes-rs directory)
    runs-on: ubuntu-latest
    outputs:
      recipes_changed: ${{ steps.filter.outputs.recipes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for changes in recipes-rs/
        id: filter
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^recipes-rs/'; then
            echo "recipes=true" >> $GITHUB_OUTPUT
          else
            echo "recipes=false" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    # Builds a new version of Docker image if the app changed
    needs: check-changes
    if: needs.check-changes.outputs.recipes_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        working-directory: recipes-rs
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/recipes-rs:${{ github.sha }} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/recipes-rs:${{ github.sha }}

  cdk-deploy:
    # Run `cdk deploy`
    needs: [check-changes, build-and-push]
    if: always()  # Override "needs" if build-and-push was skipped
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}
      # DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install CDK and dependencies
        run: |
          pip install -r requirements.txt
          pip install aws-cdk-lib constructs

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Run CDK deploy
        run: cdk deploy --require-approval never

      # Synchronize static files in S3 ; Could be moved to a separate job
      - name: Sync static files to S3
        run: |
          aws s3 sync static/ s3://recipes-rs-static-content --delete
